
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.ServerSocket;
import java.net.Socket;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author indra
 */
public class Cliente extends javax.swing.JFrame implements Runnable{//Por que siempre debe estar a la escucha

    /**
     * Creates new form Cliente
     */
    public Cliente() {
        Thread hilo = new Thread(this);
        hilo.start();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ipDestino = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mensajes = new javax.swing.JTextArea();
        enviarBtn = new javax.swing.JButton();
        salirBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        chatCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("IP Destino:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 23, -1, -1));

        jLabel2.setText("Nombre: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 67, -1, -1));

        ipDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipDestinoActionPerformed(evt);
            }
        });
        getContentPane().add(ipDestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 18, 213, -1));
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 62, 213, -1));

        mensajes.setColumns(20);
        mensajes.setRows(5);
        jScrollPane1.setViewportView(mensajes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 94, 378, 152));

        enviarBtn.setText("Enviar");
        enviarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarBtnActionPerformed(evt);
            }
        });
        getContentPane().add(enviarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        salirBtn.setText("Salir");
        salirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBtnActionPerformed(evt);
            }
        });
        getContentPane().add(salirBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, -1));

        jLabel3.setText("Mensaje");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));
        getContentPane().add(chatCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 360, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ipDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipDestinoActionPerformed

    private void salirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBtnActionPerformed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_salirBtnActionPerformed

    private void enviarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarBtnActionPerformed
        try {
            Socket sc = new Socket ("192.168.1.169", 9999);  
             Datos data = new Datos();
             data.setIp(ipDestino.getText());
             data.setNombre(nombre.getText());
             data.setMensaje(chatCliente.getText());
             
             ObjectOutputStream output = new ObjectOutputStream(sc.getOutputStream());
             output.writeObject(data);
             
             mensajes.append(data.getNombre() + ":" + data.getMensaje() + "\n");
             chatCliente.setText("");
             output.close();
        } catch (IOException ex) {
            System.out.println("Error en cliente enviarBtn: " + ex.getMessage());
        }
    }//GEN-LAST:event_enviarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chatCliente;
    private javax.swing.JButton enviarBtn;
    private javax.swing.JTextField ipDestino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mensajes;
    private javax.swing.JTextField nombre;
    private javax.swing.JButton salirBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        int i=0;
        try {
            ServerSocket ss= new ServerSocket(7777);//En este caso debe ser un puerto distinto al que env√≠a
            Datos data = null;
            while(i==0){
            Socket sc = ss.accept();
            ObjectInputStream input = new ObjectInputStream(sc.getInputStream());
            data = (Datos)input.readObject();
            mensajes.append(data.getNombre() + ": " + data.getIp() + "\n" + data.getMensaje() + "\n");
            }
            
            ss.close();
        } catch (IOException ex) {
            System.out.println("Error en el servidor del cliente: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            System.out.println("Error en la lectura de data: "+ ex.getMessage());
        }
    }
    
    
}

class Datos implements Serializable{
    private transient static final long serializableVersionUID = 1L;
    
    private String nombre, mensaje, ip;
    public Datos(){}
    public Datos(String n, String m, String ip){
    this.nombre = n;
    this.mensaje = m;
    this.ip = ip;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getMensaje() {
        return mensaje;
    }

    public void setMensaje(String mensaje) {
        this.mensaje = mensaje;
    }

    public String getIp() {
        return ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }
    
    public String toString(){
    return "IP:" + ip + " Nombre: " + nombre + " Mensaje: " + mensaje + "\n"; 
    }
}
