
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author indra
 */
public class Servidor extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Servidor
     */
    public Servidor() {
        Thread hilo = new Thread(this);
        hilo.start();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaServidor = new java.awt.TextArea();
        salirBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        areaServidor.setFont(new java.awt.Font("Maku", 0, 24)); // NOI18N
        jScrollPane1.setViewportView(areaServidor);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 45, 400, 189));

        salirBtn.setText("Salir");
        salirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBtnActionPerformed(evt);
            }
        });
        getContentPane().add(salirBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 246, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBtnActionPerformed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_salirBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea areaServidor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton salirBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        int i = 0;
        try {
            ServerSocket ss = new ServerSocket(7777);//Puerto donde recibe de clientes
            Datos data = new Datos();
            
            while(i == 0){
            Socket sc = ss.accept();
            ObjectInputStream input = new ObjectInputStream(sc.getInputStream());
            data = (Datos)input.readObject();
            areaServidor.append(data.getNombre() + ":\n " + data.getMensaje() + "\n");
            
            //Enviar a clientes
            
            Socket send = new Socket(data.getIp(),9999);//Puerto donde env√≠a a clientes
            ObjectOutputStream output = new ObjectOutputStream(send.getOutputStream());
            output.writeObject(data);
            //Cerrramos la conexion de los 2 socket
            send.close();
            sc.close();
            
            }
            //Cerramos la conexion del servidor
            ss.close();
        } catch (IOException ex) {
            System.out.println("Error en el servidor: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            System.out.println("Error en la lectura de datos: " + ex.getMessage());
        }
        
    }
}
